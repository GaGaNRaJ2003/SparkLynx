 SELECT Username, ContactDetails
   FROM USERS
   WHERE EXISTS (
       SELECT 1
       FROM ORDERS
       WHERE ORDERS.UserID = USERS.UserID
       AND ORDERS.DeliveryTime > '2024-02-15 12:00:00'
   );

 SELECT RATINGS.OrderID, RATINGS.Rating
   FROM RATINGS
   WHERE RATINGS.Rating <= 2;

 SELECT USERS.Username, CUSTOMER_SUPPORT.IssueDescription
   FROM USERS
   INNER JOIN CUSTOMER_SUPPORT ON USERS.UserID = CUSTOMER_SUPPORT.UserID
   WHERE CUSTOMER_SUPPORT.IssueDescription = 'Late delivery'
   AND CUSTOMER_SUPPORT.Status = 'Open';

 SELECT ORDERS.OrderID, ORDERS.PickupLocation
   FROM ORDERS
   INNER JOIN DELIVERY_ASSIGNMENT ON ORDERS.OrderID = DELIVERY_ASSIGNMENT.OrderID
   WHERE ORDERS.DeliveryTime > '2024-02-15 12:00:00';

 SELECT PAYMENTS.OrderID, PAYMENTS.PaymentMethod
   FROM PAYMENTS
   WHERE PAYMENTS.Amount > 50.00
   AND PAYMENTS.PaymentMethod = 'PayPal';

 SELECT RATINGS.OrderID, TRACKING.Status
   FROM RATINGS
   INNER JOIN TRACKING ON RATINGS.OrderID = TRACKING.OrderID
   WHERE RATINGS.Rating = 5;

 SELECT ORDERS.OrderID, PROMOTIONS.Description
   FROM ORDERS
   INNER JOIN PROMOTIONS ON ORDERS.DeliveryTime BETWEEN PROMOTIONS.StartDate AND PROMOTIONS.EndDate
   WHERE PROMOTIONS.Description = 'Spring Sale';

 SELECT USERS.Username, RATINGS.Feedback
   FROM USERS
   INNER JOIN RATINGS ON USERS.UserID = RATINGS.UserID
   INNER JOIN CUSTOMER_SUPPORT ON RATINGS.OrderID = CUSTOMER_SUPPORT.TicketID
   WHERE RATINGS.Rating >= 4
   AND CUSTOMER_SUPPORT.Status = 'Open';

 SELECT ORDERS.OrderID, ORDERS.DeliveryTime
   FROM ORDERS
   WHERE ORDERS.PickupLocation != ORDERS.DropOffLocation;

 SELECT TRACKING.OrderID, TRACKING.Status
    FROM TRACKING
    LEFT JOIN DELIVERY_ASSIGNMENT ON TRACKING.OrderID = DELIVERY_ASSIGNMENT.OrderID
    WHERE TRACKING.Status IN ('In Transit', 'Out for Delivery')
    AND DELIVERY_ASSIGNMENT.OrderID IS NULL;

 SELECT PAYMENTS.OrderID, PAYMENTS.Amount
    FROM PAYMENTS
    WHERE PAYMENTS.PaymentMethod IN ('Credit Card', 'PayPal');

SELECT USERS.Username, CUSTOMER_SUPPORT.IssueDescription
    FROM USERS
    INNER JOIN CUSTOMER_SUPPORT ON USERS.UserID = CUSTOMER_SUPPORT.UserID
    INNER JOIN ADMIN ON CUSTOMER_SUPPORT.UserID = ADMIN.AdminID
    WHERE CUSTOMER_SUPPORT.Status = 'Open'
    AND CUSTOMER_SUPPORT.Resolution = 'Pending'
    AND ADMIN.AdminID = (SELECT AdminID FROM ADMIN WHERE Name = 'Priya Khan');

